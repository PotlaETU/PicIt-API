image: dh-iutl.univ-artois.fr/gradle:8.12.0-jdk-21-and-23-alpine

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  MONGODB_HOST: mongo
  MONGODB_PORT: 27017
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.pip-cache"
  IMAGE_DOCKER: "anthony.rolland/picit-api:latest"
  URL_REGISTRE_IMAGE: "reg-iutl.univ-artois.fr"
  PORT: "8081"
  URL_WEBSITE: "picit-main-api.$FQDN_IUT"


stages:
  - build
  - test
  - package
  - deploy

default:
  tags:
    - 2024_virtuav

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

services:
  - name: dh-iutl.univ-artois.fr/mongo:4.4
    alias: mongo

build:
  stage: build
  script:
    - gradle clean build -x test
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle
  artifacts:
    paths:
      - build/libs/*.jar
    expire_in: 1 week

test:
  stage: test
  script:
    - gradle test
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle
  variables:
    SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/PicIt
  dependencies:
    - build
  artifacts:
    reports:
      junit: build/test-results/test/**/TEST-*.xml

build-api:
  stage: package
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle
  script:
    - gradle bootJar
  needs: [ "build", "test" ]
  artifacts:
    paths:
      - build/libs/*.jar
    expire_in: 1 week
  only:
    - main
    - develop

deploy-kaniko:
  stage: deploy
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle
  image:
    name: gcr.io/kaniko-project/executor:v1.18.0-debug
    entrypoint: [ "" ]
  script:
    - echo "${NEXUS_USER}"
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${URL_REGISTRE_IMAGE}\":{\"auth\":\"$(printf "%s:%s" "${NEXUS_USER}" "${NEXUS_PASSWD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${URL_REGISTRE_IMAGE}/${IMAGE_DOCKER}"
  needs: [ "build-bootjar" ]
  only:
    - main
    - develop
  when: manual
